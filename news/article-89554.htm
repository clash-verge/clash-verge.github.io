<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-verge.github.io/news/article-89554.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>一个高频问题：异步操作会创建线程吗？</title>
        <meta name="description" content="这个问题在微信上被别人问过好多次，想来想去觉得有必要统一解答下，先说下我的答案：可能会，也有可能不会。 要想寻找答案，需要从异步处理 的底层框架说起。 一：异步底层是什么 异步 从设计层面上来说它就是" />
        <link rel="icon" href="/assets/website/img/clash_verge/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Verge免费节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clash-verge.github.io/news/article-89554.htm" />
    <meta property="og:site_name" content="Clash Verge免费节点分享站" />
    <meta property="og:title" content="一个高频问题：异步操作会创建线程吗？" />
    <meta property="og:image" content="https://clash-verge.github.io/uploads/20240802-1/498b2c0ef8012602c4b92739ddb20f53.webp" />
        <meta property="og:release_date" content="2025-04-06T10:06:39" />
    <meta property="og:updated_time" content="2025-04-06T10:06:39" />
        <meta property="og:description" content="这个问题在微信上被别人问过好多次，想来想去觉得有必要统一解答下，先说下我的答案：可能会，也有可能不会。 要想寻找答案，需要从异步处理 的底层框架说起。 一：异步底层是什么 异步 从设计层面上来说它就是" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="一个高频问题：异步操作会创建线程吗？">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/clash_verge/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clash_verge/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clash_verge/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clash_verge/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clash_verge/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clash_verge/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/clash_verge/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/clash_verge/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-GMXY0BFY8K"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-GMXY0BFY8K');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center justify-content-between">
                        <a href="/"><span class="logo">Clash Verge</span></a>
                        
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>一个高频问题：异步操作会创建线程吗？</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Video Section ======= -->
        <section id="about-video" class="about-video">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Verge Rev节点订阅站" data-url="https://clashvergerev.github.io">
                  				  				  				<p>这个问题在微信上被别人问过好多次，想来想去觉得有必要统一解答下，先说下我的答案：<strong>可能会，也有可能不会</strong>。</p> <p>要想寻找答案，需要从<code>异步处理</code> 的底层框架说起。</p> <h2 id="一异步底层是什么">一：异步底层是什么</h2> <p><code>异步</code> 从设计层面上来说它就是一个<code>发布订阅者</code> 模式，毕竟它的底层用到了<code>端口完成队列</code>，可以从<code>IO完成端口内核对象</code> 所提供的三个方法中有所体现。</p> <ol> <li>CreateIoCompletionPort</li> </ol> <p>可以粗看下签名：</p> <pre><code class="language-C#"> HANDLE WINAPI CreateIoCompletionPort(   _In_     HANDLE    FileHandle,   _In_opt_ HANDLE    ExistingCompletionPort,   _In_     ULONG_PTR CompletionKey,   _In_     DWORD     NumberOfConcurrentThreads );</code></pre> <p>这个方法主要是将<code>文件句柄</code> 和<code>IO完成端口内核对象</code> 进行绑定，其中的<code>NumberOfConcurrentThreads</code> 表示完成端口最多允许 running 的线程上限。</p> <ol start="2"> <li>PostQueuedCompletionStatus</li> </ol> <p>再看签名：</p> <pre><code class="language-C#"> BOOL WINAPI PostQueuedCompletionStatus(   _In_     HANDLE       CompletionPort,   _In_     DWORD        dwNumberOfBytesTransferred,   _In_     ULONG_PTR    dwCompletionKey,   _In_opt_ LPOVERLAPPED lpOverlapped );</code></pre> <p>这个函数的作用就是将一个<code>包</code> 通过<code>内核对象</code> 丢给<code>驱动设备程序</code> ，由后者与硬件交互，比如<code>文件</code>。</p> <ol start="3"> <li>GetQueuedCompletionStatus</li> </ol> <p>看签名：</p> <pre><code class="language-C#"> BOOL GetQueuedCompletionStatus(   [in]  HANDLE       CompletionPort,         LPDWORD      lpNumberOfBytesTransferred,   [out] PULONG_PTR   lpCompletionKey,   [out] LPOVERLAPPED *lpOverlapped,   [in]  DWORD        dwMilliseconds );</code></pre> <p>这个方法尝试从<code>IO完成端口内核对象</code> 中提取 IO 包，如果没有提取到，那么就会无限期等待，直到提取为止。</p> <p>对上面三个方法有了概念之后，接下来看下结构图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/95f4878bf0862f18ea2158f445e4851f.jpg" alt="一个高频问题：异步操作会创建线程吗？"></p> <p>这张图非常言简意赅，不过只画了<code>端口完成队列</code>, 其实还有三个与IO线程有关的队列，分别为：<code>等待线程队列</code>，<code>已释放队列</code>,<code>已暂停队列</code>，接下来我们稍微解读一下。</p> <p>当<code>线程t1</code> 调用<code>GetQueuedCompletionStatus</code> 时，假使此刻<code>任务队列q1</code> 无任务， 那么<code>t1</code> 会卡住并自动进去<code>等待线程队列</code> ，当某个时刻<code>q1</code> 进了任务（由驱动程序投递的），此时操作系统会将<code>t1</code> 激活来提取<code>q1</code> 的任务执行，同时将<code>t1</code> 送到<code>已释放队列</code>中。</p> <p>这个时候就有两条路了。</p> <ol> <li>遇到 Sleep 或者 lock 情况。</li> </ol> <p>如果 t1 在执行的时候，遇到了<code>Sleep</code> 或者<code>lock</code> 锁时需要被迫停止，此时系统会将 t1 线程送到<code>已暂停线程队列</code> 中，如果都 sleep 了，那<code>NumberOfConcurrentThreads</code> 就会变为 0 ，此时就会遇到无人可用的情况，那怎么办呢？只能让系统从<code>线程池</code> 中申请更多的线程来从<code>q1</code> 队列中提取任务，当某个时刻，<code>已暂停线程队列</code> 中的线程激活，那么它又回到了<code>已释放队列</code> 中继续执行任务，当任务执行完之后，再次调用<code>GetQueuedCompletionStatus</code> 方法进去<code>等待线程队列</code>。</p> <p>当然这里有一个问题，某一个时刻<code>等待线程队列</code> 中的线程数会暂时性的超过<code>NumberOfConcurrentThreads</code> 值，不过问题也不大。</p> <p>说了这么多理论是不是有点懵， 没关系，接下来我结合 windbg 和 coreclr 源码一起看下。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cd8590809d8cb7b7bc255193ab4cc61a.jpg" alt="一个高频问题：异步操作会创建线程吗？"></p> <p>以我的机器来说，<code>IO完成端口内核对象</code> 默认最多允许<code>12</code> 个 running 线程，当遇到 sleep 时看看会不会突破<code>12</code> 的限制，上代码：</p> <pre><code class="language-C#">     class Program     {         static void Main(string[] args)         {             for (int i = 0; i &lt; 2000; i++)             {                 Task.Run(async () =&gt;                 {                     await GetString();                 });             }              Console.ReadLine();         }          public static int counter = 0;          static async Task&lt;string&gt; GetString()         {             var httpClient = new HttpClient();              var str = await httpClient.GetStringAsync("http://cnblogs.com");              Console.WriteLine($"counter={++counter}, 线程：{Thread.CurrentThread.ManagedThreadId},str.length={str.Length}");              Thread.Sleep(1000000);              return str;         }     }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/375b05bed5d9290b1c828b8dbf58daae.jpg" alt="一个高频问题：异步操作会创建线程吗？"></p> <p>从图中看，已经破掉了<code>12</code> 的限制，那是不是 30 呢？ 可以用 windbg 帮忙确认一下。</p> <pre><code class="language-C#"> 0:059&gt; !tp CPU utilization: 3% Worker Thread: Total: 13 Running: 0 Idle: 13 MaxLimit: 2047 MinLimit: 12 Work Request in Queue: 0 -------------------------------------- Number of Timers: 1 -------------------------------------- Completion Port Thread:Total: 30 Free: 0 MaxFree: 24 CurrentLimit: 30 MaxLimit: 1000 MinLimit: 12</code></pre> <p>从最后一行看，没毛病，<code>IO完成端口线程</code> 确实是<code>30</code> 个。</p> <blockquote> <p>在这种情况，异步操作一定会创建线程来处理</p> </blockquote> <ol start="2"> <li>遇到耗时操作</li> </ol> <p>所谓的耗时操作，大体上是大量的序列化，复杂计算等等，这里我就用<code>while(true)</code> 模拟，因为所有线程都没有遇到暂停事件，所以理论上不会突破<code>12</code> 的限制，接下来稍微修改一下<code>GetString()</code> 方法。</p> <pre><code class="language-C#">         static async Task&lt;string&gt; GetString()         {             var httpClient = new HttpClient();              var str = await httpClient.GetStringAsync("http://cnblogs.com");              Console.WriteLine($"counter={++counter},时间:{DateTime.Now}, 线程：{Thread.CurrentThread.ManagedThreadId},str.length={str.Length}");              while (true) { }              return str;         }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/68d8ca71047080079895b3616f1c3ae8.jpg" alt="一个高频问题：异步操作会创建线程吗？"></p> <p>对比图中的时间，过了30s也无法突破 12 的限制，毕竟这些线程都是 running 状态并都在<code>已释放队列</code>中，这也就造成了所谓的<code>请求无响应</code> 的尴尬情况。</p> <h2 id="二直面问题">二：直面问题</h2> <p>如果明白了上面我所说的，那么<code>异步操作会不会创建线程 ？</code> 问题，我的答案是<code>有可能会也有可能不会</code>，具体还是取决于上面提到了两种 callback 逻辑。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-89553.htm">PyTorch的自动求导机制详细解析，PyTorch的核心魔法</a></p>
                                        <p>下一个：<a href="/news/article-90300.htm">python——json，dict之间的转换load,dump, loads, dumps</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-86650.htm" title="加工狗粮机器设备厂家（加工狗粮设备多少钱）">加工狗粮机器设备厂家（加工狗粮设备多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-66971.htm" title="孩子10几天后才说被猫咬了,打个狂犬疫苗能喝点小酒吗（打了狂犬疫苗六个月后又被猫抓伤了能茶喝吗?）">孩子10几天后才说被猫咬了,打个狂犬疫苗能喝点小酒吗（打了狂犬疫苗六个月后又被猫抓伤了能茶喝吗?）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-30-today-clash-verge-rev-node.htm" title="3月30日 | Clash Verge每天更新18.6M/S免费节点订阅链接地址">3月30日 | Clash Verge每天更新18.6M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-66328.htm" title="办理动物疫苗销售需要哪些手续 办理动物疫苗销售需要哪些手续和证件">办理动物疫苗销售需要哪些手续 办理动物疫苗销售需要哪些手续和证件</a></li>
                        <li class="py-2"><a href="/news/article-81632.htm" title="VUE中前端mock假数据的办法">VUE中前端mock假数据的办法</a></li>
                        <li class="py-2"><a href="/news/article-68889.htm" title="深入理解mmap&#8211;内核代码分析及驱动demo示例">深入理解mmap&#8211;内核代码分析及驱动demo示例</a></li>
                        <li class="py-2"><a href="/news/article-88103.htm" title="Pycharm中pyenv和virtualenv使用详解">Pycharm中pyenv和virtualenv使用详解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-17-clash-verge-rev-node-share.htm" title="3月17日 | Clash Verge每天更新23M/S免费节点订阅链接地址">3月17日 | Clash Verge每天更新23M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-74822.htm" title="动物疫苗有哪些品种卖的比较好（动物疫苗生产厂家排名）">动物疫苗有哪些品种卖的比较好（动物疫苗生产厂家排名）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-7-clash-verge-rev-node-share.htm" title="4月7日 | Clash Verge每天更新19M/S免费节点订阅链接地址">4月7日 | Clash Verge每天更新19M/S免费节点订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Video Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="me-md-auto text-center text-md-start">
                <div class="copyright">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">Clash Verge免费节点分享站</a> 版权所有 Powered by WordPress
                </div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <div id="preloader"></div>
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/clash_verge/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/clash_verge/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/clash_verge/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>